{"ast":null,"code":"import _toConsumableArray from \"/Users/joeferro/Desktop/dev/week7/day2/rails_redux_blog/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport axios from 'axios';\nvar BLOGS = 'BLOGS';\nexport var getBlogs = function getBlogs() {\n  return function (dispatch) {\n    axios.get('/api/blogs').then(function (res) {\n      return dispatch({\n        type: BLOGS,\n        blogs: res.data\n      });\n    });\n    debugger;\n  };\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'BlLOGS':\n      debugger;\n      return ion.blogs;\n\n    case 'ADD_BLOG':\n      return [action.blog].concat(_toConsumableArray(state));\n\n    case 'DELETE':\n      return state.filter(function (blog) {\n        return blog.id !== action.id;\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/joeferro/Desktop/dev/week7/day2/rails_redux_blog/client/src/reducers/blogs.js"],"names":["axios","BLOGS","getBlogs","dispatch","get","then","res","type","blogs","data","state","action","ion","blog","filter","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,KAAK,GAAG,OAAd;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAC5B,SAAO,UAACC,QAAD,EAAc;AACnBH,IAAAA,KAAK,CAACI,GAAN,CAAU,YAAV,EACCC,IADD,CACM,UAAAC,GAAG;AAAA,aAAIH,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAEN,KAAR;AAAeO,QAAAA,KAAK,EAAEF,GAAG,CAACG;AAA1B,OAAD,CAAZ;AAAA,KADT;AAEA;AACD,GAJD;AAKD,CANM;AAQP,gBAAe,YAA0B;AAAA,MAAxBC,KAAwB,uEAAhB,EAAgB;AAAA,MAAZC,MAAY;;AACvC,UAAOA,MAAM,CAACJ,IAAd;AACE,SAAK,QAAL;AACA;AACA,aAAOK,GAAG,CAACJ,KAAX;;AACA,SAAK,UAAL;AACE,cAAQG,MAAM,CAACE,IAAf,4BAAwBH,KAAxB;;AACF,SAAK,QAAL;AACE,aAAOA,KAAK,CAACI,MAAN,CAAc,UAAAD,IAAI,EAAI;AAC3B,eAAQA,IAAI,CAACE,EAAL,KAAYJ,MAAM,CAACI,EAA3B;AACD,OAFM,CAAP;;AAGF;AACE,aAAOL,KAAP;AAXJ;AAaD,CAdD","sourcesContent":["import axios from 'axios';\n\nconst BLOGS = 'BLOGS'\n\nexport const getBlogs = () => {\n  return (dispatch) => {\n    axios.get('/api/blogs')\n    .then(res => dispatch({ type: BLOGS, blogs: res.data}))\n    debugger\n  }\n}\n\nexport default ( state = [], action ) => {\n  switch(action.type) {\n    case 'BlLOGS':\n    debugger\n    return ion.blogs\n    case 'ADD_BLOG':\n      return [action.blog, ...state];\n    case 'DELETE':\n      return state.filter( blog => {\n        return (blog.id !== action.id)\n      })\n    default:\n      return state\n  }\n}"]},"metadata":{},"sourceType":"module"}